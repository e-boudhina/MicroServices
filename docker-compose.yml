version: "3.9"
services:

  eureka-server:
    container_name: eureka-container
    image: "eureka-server-image"
    build: ./Eureka-Server
    hostname: localhost
    networks:
      - office-network
    ports:
      - "8761:8761"   

  api-gateway:
    container_name: api-gateway-container
    image: "apigateway-image" #if image not found build how?
    build: ./APIGateway
    networks:
      - office-network
    ports:
      - "8090:8090"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      #- AUTH_SERVICE_URL=http://auth:3000   # Service URL environment variables  how to addd this?
    depends_on:
      - eureka-server

   
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-container
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - office-network
    env_file:
      - ./NestJS_MicroServices/.env

  auth:
    image: "auth-image"
    build:
      context: ./NestJS_MicroServices
      dockerfile: ./apps/auth/Dockerfile
    container_name: auth-container
    networks:
      - office-network
    ports:
      - "3000:3000"      
    env_file:
      - ./NestJS_MicroServices/apps/auth/.env
    depends_on:
      - mysql
      - rabbitmq
      - api-gateway
    volumes:
      - ./auth-app:/usr/src/app# any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev auth # overrides CMD from dockerfile

  mysql:
    image: "mysql:8.3"
    networks:
      - office-network
    container_name: mysql-container 
    environment:
      #- MYSQL_ALLOW_EMPTY_PASSWORD=yes
      #- MYSQL_USER=root
      - MYSQL_DATABASE=hr_management_platform
      - MYSQL_ROOT_PASSWORD=axelites_pwd
      - MYSQL_SYNCHRONIZE=true
    ports:
      - "3306:3306"
    restart: unless-stopped  
    volumes: # you need to delete this volume or else docker will only create the db the first time
    # then it will look into this volume and does not check if it exist or not (docker volume ls - docker volume rm 5twingraduationproject_db) 
      - db:/var/lib/mysql

  test:
    image: "test-image"
    build:
      context: ./NestJS_MicroServices
      dockerfile: ./apps/test/Dockerfile
    container_name: test-container
    networks:
      - office-network
    #ports:
    #  - "3600:3600"      
    env_file:
      - ./NestJS_MicroServices/apps/test/.env
    depends_on:
      - mysqlv2
      - rabbitmq
      - api-gateway
      - auth
    volumes:
      #- ./auth-app:/usr/src/app# any change to base folder should be reflected
      - /usr/src/app/node_modules
    restart: unless-stopped 
    command: npm run start:dev test # overrides CMD from dockerfile

  mysqlv2:
    image: "mysql:8.3"
    container_name: mysql-container-v2
    environment:
      - MYSQL_DATABASE=mytestdatabase
      - MYSQL_ROOT_PASSWORD=axelites_pwd
      - MYSQL_SYNCHRONIZE=true
    networks:
      - office-network
    ports:
      - "3307:3306"
    depends_on:
      - rabbitmq
      - api-gateway
      - auth  
      - test
    restart: unless-stopped  
    volumes: # you need to delete this volume or else docker will only create the db the first time
    # then it will look into this volume and does not check if it exist or not (docker volume ls - docker volume rm 5twingraduationproject_db) 
      - db2:/var/lib/mysql2    

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    networks:
      - office-network
    container_name: phpmyadmin-container
    #you can use env_file param then pass ".env" path instead
    environment:
      - PMA_HOST=mysql
      #- PMA_USER=root
      #- PMA_ROOT_PASSWORD=axelites_pwd
      #- PMA_PASSWORD=axelites_pwd
    ports:
      - "8095:80"
    restart: unless-stopped
    depends_on:
      - mysql


volumes:
  db:
  db2:


networks:
  office-network:
    driver: bridge

